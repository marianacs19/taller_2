install.packages('pacman')

library(pacman)

#recomendado usar gtsummary

p_load(rio, #importar y exportar datos de forma sencilla; tiene los temas ya definidos
       tidyverse,
       skimr,
       visdat, #visualizing missing data
       corrplot,
       stargazer) #tablas

#Cargamos la base de datos desde el reposositorio de Ignacio
## load data
df <- import("https://github.com/ignaciomsarmiento/datasets/blob/main/GEIH_sample1.Rds?raw=true")

# Los tibbles  son la extensión que me permite manejar aún más los dataframes con las funciones de tidyverse

db <- as_tibble(df)

#Usamos skim para chismosear

skim(db) %>% head()

# Summary

summary(db$y_salary_m) 

#Identificar la población adecuada i.e salario no tener niños de 12 años

#Lidiar con missing values
    # En large datasets, no es un problema elminiar los NA
    #Pero también podemos modelar el daño que puede hacer los NA's en el modelo
    #Hay muchas solcuiones al tema de los NA's por ejemplo, la imputación

#Visualizar Datasets:
# number of observations
Nobs <- nrow(db) 
Nobs
# we can use skim as a dataset. 
db_miss <- skim(db) %>% select( skim_variable, n_missing) %>% 
  mutate(p_missing = n_missing/Nobs) %>%
  arrange(p_missing)

#Imputar max education level? buscar a las personas con el la moda de las personas de esas caracteistías. YES ma adesso, 
# faremmo una opizione più semplice. La moda delle sataframe

table(db$maxEducLevel) # sacamos los valores

#Para sacar

# calculating the most commun value of maxEducLevel. 
mode_edu <- as.numeric(names(sort(table(db$maxEducLevel), decreasing = TRUE)[1]))

# Imputing the missing value. 
db <- db  %>%
  mutate(maxEducLevel = ifelse(is.na(maxEducLevel) == TRUE, mode_edu , maxEducLevel))

# calculating the most commun value of maxEducLevel. 
mode_edu <- as.numeric(names(sort(table(db$maxEducLevel), decreasing = TRUE)[1]))

# Imputing the missing value. 
db <- db  %>%
  mutate(maxEducLevel = ifelse(is.na(maxEducLevel) == TRUE, mode_edu , maxEducLevel)) # Si la observación está faltando, ponle la moda, si no, deja el vaor actual



# Las variables categóricas tienen una forma especial de ser tratada, que es con factor

db$maxEducLevel<- factor(db$maxEducLevel)

#Convertimos la variable categorica en un montón de dummies
dummy_maxEducLevel <- as.data.frame(model.matrix(~ maxEducLevel - 1, data = db)) 

#No lo unimos con llave porque el orden de las variables no ha cambiado
db <- cbind(db, dummy_maxEducLevel)

db %>% select(maxEducLevel,maxEducLevel1, maxEducLevel2,maxEducLevel3 ,maxEducLevel4 ,maxEducLevel5 ,maxEducLevel6, maxEducLevel7 ) %>% head()

linear_imput_model <- lm(y_salary_m ~ ingtot + sex   + maxEducLevel3 + maxEducLevel4 + maxEducLevel5 + maxEducLevel6 + maxEducLevel7 , data = db)
summary(linear_imput_model)



db = db %>% group_by(estrato1) %>% mutate(salario_promedio_estrato = mean(y_total_m, na.rm=T))

db %>% select(estrato1, y_total_m, salario_promedio_estrato) %>% tail()


db = db %>% mutate(y_total_m = ifelse(is.na(y_total_m)==T, yes= salario_promedio_estrato, no= y_total_m))

###Intento de hacerlo como queríamos con Monkey con sexo y nivel de educación

db = db %>% group_by(estrato1, sex) %>% mutate(promedio_sexo_eduacion = mean(y_total_m, na.rm=T))
